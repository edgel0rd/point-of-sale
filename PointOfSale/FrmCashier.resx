<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="eCircularPicture1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="tmrClock.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>