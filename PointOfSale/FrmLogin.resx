<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="eDragControl1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>